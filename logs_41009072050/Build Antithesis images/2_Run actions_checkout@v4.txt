2025-07-01T16:09:23.6069019Z ##[group]Run actions/checkout@v4
2025-07-01T16:09:23.6069847Z with:
2025-07-01T16:09:23.6070247Z   repository: ava-labs/subnet-evm
2025-07-01T16:09:23.6070900Z   token: ***
2025-07-01T16:09:23.6071274Z   ssh-strict: true
2025-07-01T16:09:23.6071651Z   ssh-user: git
2025-07-01T16:09:23.6072056Z   persist-credentials: true
2025-07-01T16:09:23.6072491Z   clean: true
2025-07-01T16:09:23.6072891Z   sparse-checkout-cone-mode: true
2025-07-01T16:09:23.6073358Z   fetch-depth: 1
2025-07-01T16:09:23.6073745Z   fetch-tags: false
2025-07-01T16:09:23.6074128Z   show-progress: true
2025-07-01T16:09:23.6074533Z   lfs: false
2025-07-01T16:09:23.6074894Z   submodules: false
2025-07-01T16:09:23.6075518Z   set-safe-directory: true
2025-07-01T16:09:23.6076224Z ##[endgroup]
2025-07-01T16:09:23.7157662Z Syncing repository: ava-labs/subnet-evm
2025-07-01T16:09:23.7160572Z ##[group]Getting Git version info
2025-07-01T16:09:23.7161765Z Working directory is '/home/runner/work/subnet-evm/subnet-evm'
2025-07-01T16:09:23.7163400Z [command]/usr/bin/git version
2025-07-01T16:09:23.7192441Z git version 2.49.0
2025-07-01T16:09:23.7218736Z ##[endgroup]
2025-07-01T16:09:23.7233757Z Temporarily overriding HOME='/home/runner/work/_temp/fd7b5ac3-6797-4cc4-8bf4-cab00cd57bae' before making global git config changes
2025-07-01T16:09:23.7236716Z Adding repository directory to the temporary git global config as a safe directory
2025-07-01T16:09:23.7240265Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/subnet-evm/subnet-evm
2025-07-01T16:09:23.7272478Z Deleting the contents of '/home/runner/work/subnet-evm/subnet-evm'
2025-07-01T16:09:23.7276326Z ##[group]Initializing the repository
2025-07-01T16:09:23.7280882Z [command]/usr/bin/git init /home/runner/work/subnet-evm/subnet-evm
2025-07-01T16:09:23.7334147Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-07-01T16:09:23.7335617Z hint: is subject to change. To configure the initial branch name to use in all
2025-07-01T16:09:23.7336966Z hint: of your new repositories, which will suppress this warning, call:
2025-07-01T16:09:23.7337825Z hint:
2025-07-01T16:09:23.7338462Z hint: 	git config --global init.defaultBranch <name>
2025-07-01T16:09:23.7339498Z hint:
2025-07-01T16:09:23.7340476Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-07-01T16:09:23.7342079Z hint: 'development'. The just-created branch can be renamed via this command:
2025-07-01T16:09:23.7343372Z hint:
2025-07-01T16:09:23.7344097Z hint: 	git branch -m <name>
2025-07-01T16:09:23.7345553Z Initialized empty Git repository in /home/runner/work/subnet-evm/subnet-evm/.git/
2025-07-01T16:09:23.7350648Z [command]/usr/bin/git remote add origin https://github.com/ava-labs/subnet-evm
2025-07-01T16:09:23.7380873Z ##[endgroup]
2025-07-01T16:09:23.7382060Z ##[group]Disabling automatic garbage collection
2025-07-01T16:09:23.7385844Z [command]/usr/bin/git config --local gc.auto 0
2025-07-01T16:09:23.7414753Z ##[endgroup]
2025-07-01T16:09:23.7415775Z ##[group]Setting up auth
2025-07-01T16:09:23.7422783Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-07-01T16:09:23.7454875Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-07-01T16:09:23.7725968Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-07-01T16:09:23.7755431Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-07-01T16:09:23.7982323Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-07-01T16:09:23.8025927Z ##[endgroup]
2025-07-01T16:09:23.8026740Z ##[group]Fetching the repository
2025-07-01T16:09:23.8034376Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +24d42c4a5aa0c26b2727d8d8210c4ae7db4855fd:refs/remotes/pull/1610/merge
2025-07-01T16:09:24.8899995Z From https://github.com/ava-labs/subnet-evm
2025-07-01T16:09:24.8901215Z  * [new ref]         24d42c4a5aa0c26b2727d8d8210c4ae7db4855fd -> pull/1610/merge
2025-07-01T16:09:24.8934034Z ##[endgroup]
2025-07-01T16:09:24.8935613Z ##[group]Determining the checkout info
2025-07-01T16:09:24.8937253Z ##[endgroup]
2025-07-01T16:09:24.8942198Z [command]/usr/bin/git sparse-checkout disable
2025-07-01T16:09:24.8983748Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-07-01T16:09:24.9013774Z ##[group]Checking out the ref
2025-07-01T16:09:24.9019203Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/1610/merge
2025-07-01T16:09:24.9786846Z Note: switching to 'refs/remotes/pull/1610/merge'.
2025-07-01T16:09:24.9788100Z 
2025-07-01T16:09:24.9788854Z You are in 'detached HEAD' state. You can look around, make experimental
2025-07-01T16:09:24.9790688Z changes and commit them, and you can discard any commits you make in this
2025-07-01T16:09:24.9792618Z state without impacting any branches by switching back to a branch.
2025-07-01T16:09:24.9794709Z 
2025-07-01T16:09:24.9796052Z If you want to create a new branch to retain commits you create, you may
2025-07-01T16:09:24.9797979Z do so (now or later) by using -c with the switch command. Example:
2025-07-01T16:09:24.9799181Z 
2025-07-01T16:09:24.9799593Z   git switch -c <new-branch-name>
2025-07-01T16:09:24.9800333Z 
2025-07-01T16:09:24.9800707Z Or undo this operation with:
2025-07-01T16:09:24.9801368Z 
2025-07-01T16:09:24.9801649Z   git switch -
2025-07-01T16:09:24.9802125Z 
2025-07-01T16:09:24.9803069Z Turn off this advice by setting config variable advice.detachedHead to false
2025-07-01T16:09:24.9804615Z 
2025-07-01T16:09:24.9806507Z HEAD is now at 24d42c4 Merge 72fe798449dc295323c0bbd1689a53e43867529e into 7abb4c64d7a8a26513a93cd55d800f61e867ffe3
2025-07-01T16:09:24.9810918Z ##[endgroup]
2025-07-01T16:09:24.9838054Z [command]/usr/bin/git log -1 --format=%H
2025-07-01T16:09:24.9860197Z 24d42c4a5aa0c26b2727d8d8210c4ae7db4855fd
