// Code generated
// This file is a generated precompile contract config with stubbed abstract functions.
// The file is generated by a template. Please inspect every code and comment in this file before use.

package allowlist

import (
	"github.com/ava-labs/subnet-evm/precompile/contract"
	"github.com/ethereum/go-ethereum/common"
)

const (
	AllowListEventGasCost = contract.LogGas + contract.LogTopicGas
)

// PackAdminAddedEvent packs the event into the appropriate arguments for AdminAdded.
// It returns topic hashes and the encoded non-indexed data.
func PackAdminAddedEvent(account common.Address) ([]common.Hash, []byte, error) {
	return AllowListABI.PackEvent("AdminAdded", account)
}

// PackEnabledAddedEvent packs the event into the appropriate arguments for EnabledAdded.
// It returns topic hashes and the encoded non-indexed data.
func PackEnabledAddedEvent(account common.Address) ([]common.Hash, []byte, error) {
	return AllowListABI.PackEvent("EnabledAdded", account)
}

// PackManagerAddedEvent packs the event into the appropriate arguments for ManagerAdded.
// It returns topic hashes and the encoded non-indexed data.
func PackManagerAddedEvent(account common.Address) ([]common.Hash, []byte, error) {
	return AllowListABI.PackEvent("ManagerAdded", account)
}

// PackRoleRemovedEvent packs the event into the appropriate arguments for RoleRemoved.
// It returns topic hashes and the encoded non-indexed data.
func PackRoleRemovedEvent(account common.Address) ([]common.Hash, []byte, error) {
	return AllowListABI.PackEvent("RoleRemoved", account)
}

func PackAllowListEvent(role Role, account common.Address) ([]common.Hash, []byte, error) {
	switch role {
	case AdminRole:
		return PackAdminAddedEvent(account)
	case ManagerRole:
		return PackManagerAddedEvent(account)
	case EnabledRole:
		return PackEnabledAddedEvent(account)
	case NoRole:
		return PackRoleRemovedEvent(account)
	default:
		panic("invalid role")
	}
}
