"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const evm_1 = require("src/apis/evm");
const utils_1 = require("src/utils");
const buffer_1 = require("buffer/");
describe("HelperFunctions", () => {
    test("calcBytesCost", () => {
        const importTx = new evm_1.ImportTx();
        // an empty EVM ImportTx is 76 bytes
        let cost = 76;
        let bytesCost = (0, utils_1.calcBytesCost)(importTx.toBuffer().byteLength);
        expect(cost).toEqual(bytesCost);
        // the byteCost should always be 1 unit of gas per byte
        let size = 100;
        cost = 100;
        bytesCost = (0, utils_1.calcBytesCost)(size);
        expect(cost).toEqual(bytesCost);
        size = 507;
        cost = 507;
        bytesCost = (0, utils_1.calcBytesCost)(size);
        expect(cost).toEqual(bytesCost);
        let hex = "000030399d0775f450604bd2fbc49ce0c5c1c6dfeb2dc2acb8c92c26eeae6e6df4502b19d891ad56056d9c01f18f43f58b5c784ad07a4a49cf3d1f11623804b5cba2c6bf000000018db97c7cece249c2b98bdc0226cc4c2a57bf52fc00b1a2bc2ec50000dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db000000000000000000000001dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db0000000700b1a2bc2eb5bdc0000000000000000000000001000000013cb7d3842e8cee6a0ebd09f1fe884f6861e1b29c";
        const exportTx = new evm_1.ExportTx();
        let unsignedTx = new evm_1.UnsignedTx(exportTx);
        exportTx.fromBuffer(new buffer_1.Buffer(hex, "hex"));
        cost = (0, utils_1.costExportTx)(unsignedTx);
        bytesCost = 11230;
        expect(cost).toEqual(bytesCost);
        hex =
            "000030399d0775f450604bd2fbc49ce0c5c1c6dfeb2dc2acb8c92c26eeae6e6df4502b19d891ad56056d9c01f18f43f58b5c784ad07a4a49cf3d1f11623804b5cba2c6bf0000000000000000";
        importTx.fromBuffer(new buffer_1.Buffer(hex, "hex"));
        unsignedTx = new evm_1.UnsignedTx(importTx);
        cost = (0, utils_1.costImportTx)(unsignedTx);
        bytesCost = 10082;
        expect(cost).toEqual(bytesCost);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyZnVuY3Rpb25zLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90ZXN0cy91dGlscy9oZWxwZXJmdW5jdGlvbnMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUE2RDtBQUM3RCxxQ0FBcUU7QUFDckUsb0NBQWdDO0FBRWhDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxHQUFTLEVBQUU7SUFDckMsSUFBSSxDQUFDLGVBQWUsRUFBRSxHQUFTLEVBQUU7UUFDL0IsTUFBTSxRQUFRLEdBQWEsSUFBSSxjQUFRLEVBQUUsQ0FBQTtRQUN6QyxvQ0FBb0M7UUFDcEMsSUFBSSxJQUFJLEdBQVcsRUFBRSxDQUFBO1FBQ3JCLElBQUksU0FBUyxHQUFXLElBQUEscUJBQWEsRUFBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDckUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUUvQix1REFBdUQ7UUFDdkQsSUFBSSxJQUFJLEdBQVcsR0FBRyxDQUFBO1FBQ3RCLElBQUksR0FBRyxHQUFHLENBQUE7UUFDVixTQUFTLEdBQUcsSUFBQSxxQkFBYSxFQUFDLElBQUksQ0FBQyxDQUFBO1FBQy9CLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUE7UUFFL0IsSUFBSSxHQUFHLEdBQUcsQ0FBQTtRQUNWLElBQUksR0FBRyxHQUFHLENBQUE7UUFDVixTQUFTLEdBQUcsSUFBQSxxQkFBYSxFQUFDLElBQUksQ0FBQyxDQUFBO1FBQy9CLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUE7UUFFL0IsSUFBSSxHQUFHLEdBQ0wsa2NBQWtjLENBQUE7UUFDcGMsTUFBTSxRQUFRLEdBQWEsSUFBSSxjQUFRLEVBQUUsQ0FBQTtRQUN6QyxJQUFJLFVBQVUsR0FBZSxJQUFJLGdCQUFVLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDckQsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLGVBQU0sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQTtRQUMzQyxJQUFJLEdBQUcsSUFBQSxvQkFBWSxFQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQy9CLFNBQVMsR0FBRyxLQUFLLENBQUE7UUFDakIsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUUvQixHQUFHO1lBQ0QsMEpBQTBKLENBQUE7UUFDNUosUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLGVBQU0sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQTtRQUMzQyxVQUFVLEdBQUcsSUFBSSxnQkFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3JDLElBQUksR0FBRyxJQUFBLG9CQUFZLEVBQUMsVUFBVSxDQUFDLENBQUE7UUFDL0IsU0FBUyxHQUFHLEtBQUssQ0FBQTtRQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ2pDLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHBvcnRUeCwgSW1wb3J0VHgsIFVuc2lnbmVkVHggfSBmcm9tIFwic3JjL2FwaXMvZXZtXCJcbmltcG9ydCB7IGNhbGNCeXRlc0Nvc3QsIGNvc3RFeHBvcnRUeCwgY29zdEltcG9ydFR4IH0gZnJvbSBcInNyYy91dGlsc1wiXG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyL1wiXG5cbmRlc2NyaWJlKFwiSGVscGVyRnVuY3Rpb25zXCIsICgpOiB2b2lkID0+IHtcbiAgdGVzdChcImNhbGNCeXRlc0Nvc3RcIiwgKCk6IHZvaWQgPT4ge1xuICAgIGNvbnN0IGltcG9ydFR4OiBJbXBvcnRUeCA9IG5ldyBJbXBvcnRUeCgpXG4gICAgLy8gYW4gZW1wdHkgRVZNIEltcG9ydFR4IGlzIDc2IGJ5dGVzXG4gICAgbGV0IGNvc3Q6IG51bWJlciA9IDc2XG4gICAgbGV0IGJ5dGVzQ29zdDogbnVtYmVyID0gY2FsY0J5dGVzQ29zdChpbXBvcnRUeC50b0J1ZmZlcigpLmJ5dGVMZW5ndGgpXG4gICAgZXhwZWN0KGNvc3QpLnRvRXF1YWwoYnl0ZXNDb3N0KVxuXG4gICAgLy8gdGhlIGJ5dGVDb3N0IHNob3VsZCBhbHdheXMgYmUgMSB1bml0IG9mIGdhcyBwZXIgYnl0ZVxuICAgIGxldCBzaXplOiBudW1iZXIgPSAxMDBcbiAgICBjb3N0ID0gMTAwXG4gICAgYnl0ZXNDb3N0ID0gY2FsY0J5dGVzQ29zdChzaXplKVxuICAgIGV4cGVjdChjb3N0KS50b0VxdWFsKGJ5dGVzQ29zdClcblxuICAgIHNpemUgPSA1MDdcbiAgICBjb3N0ID0gNTA3XG4gICAgYnl0ZXNDb3N0ID0gY2FsY0J5dGVzQ29zdChzaXplKVxuICAgIGV4cGVjdChjb3N0KS50b0VxdWFsKGJ5dGVzQ29zdClcblxuICAgIGxldCBoZXg6IHN0cmluZyA9XG4gICAgICBcIjAwMDAzMDM5OWQwNzc1ZjQ1MDYwNGJkMmZiYzQ5Y2UwYzVjMWM2ZGZlYjJkYzJhY2I4YzkyYzI2ZWVhZTZlNmRmNDUwMmIxOWQ4OTFhZDU2MDU2ZDljMDFmMThmNDNmNThiNWM3ODRhZDA3YTRhNDljZjNkMWYxMTYyMzgwNGI1Y2JhMmM2YmYwMDAwMDAwMThkYjk3YzdjZWNlMjQ5YzJiOThiZGMwMjI2Y2M0YzJhNTdiZjUyZmMwMGIxYTJiYzJlYzUwMDAwZGJjZjg5MGY3N2Y0OWI5Njg1NzY0OGI3MmI3N2Y5ZjgyOTM3ZjI4YTY4NzA0YWYwNWRhMGRjMTJiYTUzZjJkYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMWRiY2Y4OTBmNzdmNDliOTY4NTc2NDhiNzJiNzdmOWY4MjkzN2YyOGE2ODcwNGFmMDVkYTBkYzEyYmE1M2YyZGIwMDAwMDAwNzAwYjFhMmJjMmViNWJkYzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMTNjYjdkMzg0MmU4Y2VlNmEwZWJkMDlmMWZlODg0ZjY4NjFlMWIyOWNcIlxuICAgIGNvbnN0IGV4cG9ydFR4OiBFeHBvcnRUeCA9IG5ldyBFeHBvcnRUeCgpXG4gICAgbGV0IHVuc2lnbmVkVHg6IFVuc2lnbmVkVHggPSBuZXcgVW5zaWduZWRUeChleHBvcnRUeClcbiAgICBleHBvcnRUeC5mcm9tQnVmZmVyKG5ldyBCdWZmZXIoaGV4LCBcImhleFwiKSlcbiAgICBjb3N0ID0gY29zdEV4cG9ydFR4KHVuc2lnbmVkVHgpXG4gICAgYnl0ZXNDb3N0ID0gMTEyMzBcbiAgICBleHBlY3QoY29zdCkudG9FcXVhbChieXRlc0Nvc3QpXG5cbiAgICBoZXggPVxuICAgICAgXCIwMDAwMzAzOTlkMDc3NWY0NTA2MDRiZDJmYmM0OWNlMGM1YzFjNmRmZWIyZGMyYWNiOGM5MmMyNmVlYWU2ZTZkZjQ1MDJiMTlkODkxYWQ1NjA1NmQ5YzAxZjE4ZjQzZjU4YjVjNzg0YWQwN2E0YTQ5Y2YzZDFmMTE2MjM4MDRiNWNiYTJjNmJmMDAwMDAwMDAwMDAwMDAwMFwiXG4gICAgaW1wb3J0VHguZnJvbUJ1ZmZlcihuZXcgQnVmZmVyKGhleCwgXCJoZXhcIikpXG4gICAgdW5zaWduZWRUeCA9IG5ldyBVbnNpZ25lZFR4KGltcG9ydFR4KVxuICAgIGNvc3QgPSBjb3N0SW1wb3J0VHgodW5zaWduZWRUeClcbiAgICBieXRlc0Nvc3QgPSAxMDA4MlxuICAgIGV4cGVjdChjb3N0KS50b0VxdWFsKGJ5dGVzQ29zdClcbiAgfSlcbn0pXG4iXX0=