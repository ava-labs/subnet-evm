name: Build + test + release

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:

jobs:
  lint_test:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/lint_allowed_geth_imports.sh
        shell: bash
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.47
          working-directory: .
          args: --timeout 3m

  unit_test:
    name: Golang Unit Tests v${{ matrix.go }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.18"]
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - run: go mod download
        shell: bash
      - run: ./scripts/build.sh ./build/subnetevm
        shell: bash
      - run: ./scripts/build_test.sh -race
        shell: bash
      - run: ./scripts/coverage.sh
        shell: bash

  e2e_test:
    name: e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"
      - name: Yarn install
        run: yarn
        working-directory: ./contract-examples
      - name: Install AvalancheGo Release
        shell: bash
        run: BASEDIR=/tmp/e2e-test AVALANCHEGO_BUILD_PATH=/tmp/e2e-test/avalanchego ./scripts/install_avalanchego_release.sh
      - name: Build Subnet-EVM Plugin Binary
        shell: bash
        run: ./scripts/build.sh /tmp/e2e-test/avalanchego/plugins/srEXiWaHuhNyGwPUi444Tu47ZEDwxTWrbQiuD7FmgSAQ6X7Dy
      - name: Run E2E Tests
        shell: bash
        run: AVALANCHEGO_BUILD_PATH=/tmp/e2e-test/avalanchego DATA_DIR=/tmp/e2e-test/data ./scripts/run_ginkgo.sh

  release:
    # needs: [lint_test, unit_test, e2e_test, simulator_test]
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: subnet-evm
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Set up arm64 cross compiler
        run: |
          sudo apt-get -y update
          sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Checkout osxcross
        uses: actions/checkout@v2
        with:
          repository: tpoechtrager/osxcross
          path: osxcross
      - name: Build osxcross
        run: |
          sudo apt-get -y install clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev
          cd osxcross
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz -O tarballs/MacOSX11.3.sdk.tar.xz
          echo cd4f08a75577145b8f05245a2975f7c81401d75e9535dcffbb879ee1deefcbf4 tarballs/MacOSX11.3.sdk.tar.xz | sha256sum -c -
          UNATTENDED=1 ./build.sh
          echo $PWD/target/bin >> $GITHUB_PATH
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
          workdir: ./subnet-evm/
        env:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
