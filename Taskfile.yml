# https://taskfile.dev
# To run on a system without task installed, `./scripts/run_task.sh` will execute it with `go run`.
# If in the nix dev shell, `task` is available.

version: '3'

tasks:
  default: ./scripts/run_task.sh --list

  actionlint:
    desc: Run the actionlint.sh
    cmd: ./scripts/actionlint.sh # tests.yml

  build:
    desc: Run the build.sh
    cmd: ./scripts/build.sh # tests.yml

  build-antithesis-images:
    desc: Build the antithesis images for the avalanchego test setup
    cmd: bash -x ./scripts/build_antithesis_images.sh # publish_antithesis_images.yml

  build-bench-precompiles:
    desc: Build the benchmark precompiles
    cmd: ./scripts/build_bench_precompiles.sh # bench.yml

  build-docker-image:
    desc: Build the docker image
    cmd: ./scripts/build_docker_image.sh # publish_docker.yml

  build-test:
    desc: Run the build_test.sh
    cmd: ./scripts/build_test.sh # tests.yml

  check-clean-branch:
    desc: Checks that the git working tree is clean
    cmd: .github/workflows/check-clean-branch.sh

  check-generate-codec:
    desc: Checks that generated codec files are up-to-date (requires a clean git working tree)
    cmds:
      - task: generate-codec
      - task: check-clean-branch

  check-generate-mocks:
    desc: Checks that generated mocks are up-to-date (requires a clean git working tree)
    cmds:
      - task: generate-mocks
      - task: check-clean-branch

  check-go-mod-tidy:
    desc: Checks that go.mod and go.sum are up-to-date (requires a clean git working tree)
    cmds:
      - cmd: go mod tidy
      - task: check-clean-branch

  coverage:
    desc: Run the coverage.sh
    cmd: ./scripts/coverage.sh # tests.yml

  generate-codec:
    desc: Generates fjl/gencodec files
    cmds:
      - cmd: grep -lr -E '^// Code generated by github\.com\/fjl\/gencodec\. DO NOT EDIT\.$' . | xargs -r rm
      - cmd: go generate -run "github.com/fjl/gencodec" ./...

  generate-mocks:
    desc: Generates testing mocks
    cmds:
      - cmd: grep -lr -E '^// Code generated by MockGen\. DO NOT EDIT\.$' . | xargs -r rm
      - cmd: go generate -run "go.uber.org/mock/mockgen" ./...

  install-avalanchego-release:
    desc: Install AvalancheGo release for testing
    cmd: ./scripts/install_avalanchego_release.sh # tests.yml

  lint:
    desc: Runs static analysis tests of golang code
    cmd: ./scripts/lint.sh

  lint-all:
    desc: Runs all lint checks in parallel
    deps:
      - lint
      - actionlint
      - shellcheck
      - check-generate-codec
      - check-generate-mocks

  lint-all-ci:
    desc: Runs all lint checks one-by-one
    cmds:
      - task: lint
      - task: actionlint
      - task: shellcheck
      - task: check-generate-codec
      - task: check-generate-mocks

  shellcheck:
    desc: Run the shellcheck.sh
    cmd: ./scripts/shellcheck.sh # tests.yml

  test-build-antithesis-images:
    desc: Test antithesis images build
    cmd: bash -x scripts/tests.build_antithesis_images.sh

  test-build-antithesis-images-ci: # consolidated test-build-antithesis-images
    desc: Test antithesis images build with CI setup
    env:
      BASEDIR: '{{.BASEDIR | default "/tmp/e2e-test"}}'
      AVALANCHEGO_BUILD_PATH: '{{.AVALANCHEGO_BUILD_PATH | default "/tmp/e2e-test/avalanchego"}}'
    cmds:
      - task: install-avalanchego-release
      - task: build
      - cmd: go run ./tests/antithesis --avalanchego-path=/tmp/e2e-test/avalanchego/avalanchego --duration=60s
      - task: test-build-antithesis-images

  test-build-image:
    desc: Test docker image build
    cmd: bash -x scripts/tests.build_docker_image.sh # tests.yml

  test-e2e-load:
    desc: Run E2E load tests
    cmd: ./scripts/run_ginkgo_load.sh # tests.yml

  test-e2e-load-ci: # consolidated test-e2e-load
    desc: Run E2E load tests with CI setup
    env:
      BASEDIR: '{{.BASEDIR | default "/tmp/e2e-test"}}'
      AVALANCHEGO_BUILD_PATH: '{{.AVALANCHEGO_BUILD_PATH | default "/tmp/e2e-test/avalanchego"}}'
    cmds:
      - task: install-avalanchego-release
      - task: build
      - task: test-e2e-load

  test-e2e-precompile:
    desc: Run E2E precompile tests
    cmd: bash ./scripts/run_ginkgo_precompile.sh # tests.yml

  test-e2e-precompile-ci: # consolidated test-e2e-precompile
    desc: Run E2E precompile tests with CI setup
    env:
      AVALANCHEGO_BUILD_PATH: '{{.AVALANCHEGO_BUILD_PATH | default "/tmp/e2e-test/avalanchego"}}'
      DATA_DIR: '{{.DATA_DIR | default "/tmp/e2e-test/precompile-data"}}'
    cmds:
      - task: install-avalanchego-release
      - task: build
      - task: test-e2e-precompile

  test-e2e-warp:
    desc: Run E2E warp tests
    cmd: ./scripts/run_ginkgo_warp.sh # tests.yml

  test-e2e-warp-ci: # consolidated test-e2e-warp
    desc: Run E2E warp tests with CI setup
    env:
      BASEDIR: '{{.BASEDIR | default "/tmp/e2e-test"}}'
      AVALANCHEGO_BUILD_PATH: '{{.AVALANCHEGO_BUILD_PATH | default "/tmp/e2e-test/avalanchego"}}'
    cmds:
      - task: install-avalanchego-release
      - task: build
      - task: test-e2e-warp

  update_avalanchego_version:
    desc: Run the update_avalanchego_version.sh
    cmd: ./scripts/update_avalanchego_version.sh # tests.yml
